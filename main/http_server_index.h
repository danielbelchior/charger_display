const char index_html[] PROGMEM = R"rawliteral(
<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><title>Charger Display</title><script src="https://cdn.tailwindcss.com"></script><style>.log-info{color:green}.log-warning{color:orange}.log-error{color:red}.log-debug{color:gray}</style></head><body class="flex flex-col items-center justify-center min-h-screen bg-gray-100 space-y-6 p-4"><div class="flex space-x-6 bg-white p-4 rounded-lg shadow-md"><div><h2 class="text-lg font-semibold mb-2">Display</h2><div id="matrix" class="grid grid-cols-8 gap-1"></div></div><div class="space-y-2"><h2 class="text-lg font-semibold mb-2">Status</h2><div><strong>Date Time:</strong> <span id="current_time">-</span></div><div><strong>Uptime:</strong> <span id="uptime">-</span></div><div><strong>Wifi Uptime:</strong> <span id="wifi_last_connect_attempt">-</span></div><div><strong>IP Address:</strong> <span id="ip_address">-</span></div><div><strong>HASS Connected:</strong> <span id="ws_connected">-</span></div><div><strong>Free Heap:</strong> <span id="free_heap">-</span></div><div><label class="font-semibold">Sensor 1 State:</label> <select id="sensor_1_state" class="border rounded p-1"><option value="unknown">unknown</option><option value="off">off</option><option value="disconnected">disconnected</option><option value="charging">charging</option></select></div><div><label class="font-semibold">Sensor 2 State:</label> <select id="sensor_2_state" class="border rounded p-1"><option value="unknown">unknown</option><option value="off">off</option><option value="disconnected">disconnected</option><option value="charging">charging</option></select></div><div><label class="font-semibold">Display Brightness:</label> <input id="displayBrightness" type="range" min="1" max="100" class="w-40"> <span id="brightnessValue">-</span></div></div></div><div class="bg-gray-50 p-2 rounded-lg shadow-md max-w-3xl w-full"><h2 class="text-sm font-semibold mb-1">Logs</h2><div id="logs" class="font-mono text-xs space-y-1 max-h-80 overflow-y-auto"></div></div><button id="restartBtn" title="Restart" class="fixed top-4 right-4 z-50 bg-white border border-gray-300 shadow-lg rounded-full p-3 hover:bg-red-100 transition" style="font-size:2rem">🔄</button><script>let ws,statusInterval,messagesThisSecond=0;function connectWebSocket(){(ws=new WebSocket("ws://charger.home:81/")).onopen=()=>{console.log("✅ WebSocket connected"),ws.send("status"),statusInterval=setInterval(()=>{ws.readyState===WebSocket.OPEN&&ws.send("status")},1e3)},ws.onmessage=t=>{messagesThisSecond++;try{var o=JSON.parse(t.data);if("number"==typeof o.uptime){var a=o.uptime,r=Math.floor(a/86400),l=Math.floor(a%86400/3600),c=Math.floor(a%3600/60);let e="";0<r&&(e+=r+"d "),(0<l||0<r)&&(e+=l+"h "),e+=c+"m",document.getElementById("uptime").textContent=e}else document.getElementById("uptime").textContent="-";if("number"==typeof o.wifi_last_connect_attempt){var d=o.wifi_last_connect_attempt,m=Math.floor(d/86400),i=Math.floor(d%86400/3600),g=Math.floor(d%3600/60);let e="";0<m&&(e+=m+"d "),(0<i||0<m)&&(e+=i+"h "),e+=g+"m",document.getElementById("wifi_last_connect_attempt").textContent=e}else document.getElementById("wifi_last_connect_attempt").textContent="-";document.getElementById("current_time").textContent=o.current_time??"-",document.getElementById("ip_address").textContent=o.ip_address??"-",document.getElementById("ws_connected").textContent=o.ws_connected?"Yes":"No","number"==typeof o.free_heap?document.getElementById("free_heap").textContent=(o.free_heap/1024).toFixed(1)+" KB":document.getElementById("free_heap").textContent=o.free_heap??"-",o.sensor_1_state&&(document.getElementById("sensor_1_state").value=o.sensor_1_state),o.sensor_2_state&&(document.getElementById("sensor_2_state").value=o.sensor_2_state),void 0!==o.displayBrightness&&(document.getElementById("displayBrightness").value=o.displayBrightness,document.getElementById("brightnessValue").textContent=o.displayBrightness);let s=document.getElementById("matrix"),n=(s.innerHTML="",o.displayArray.forEach(e=>{e.forEach(e=>{var t=e>>16&255,n=e>>8&255,e=255&e,o=document.createElement("div");o.style.backgroundColor=`rgb(${t}, ${n}, ${e})`,o.className="w-8 h-8 border border-gray-200",s.appendChild(o)})}),document.getElementById("logs"));n.innerHTML="",o.logBuffer&&o.logBuffer.slice().reverse().forEach(e=>{var t=document.createElement("div");e.includes(" INFO: ")?t.className="log-info":e.includes(" WARNING: ")?t.className="log-warning":e.includes(" ERROR: ")?t.className="log-error":e.includes(" DEBUG: ")&&(t.className="log-debug"),t.textContent=e,n.appendChild(t)})}catch(e){console.error("JSON parse error:",e,t.data)}},ws.onclose=()=>{console.log("⚠️ WebSocket disconnected, retrying in 2s..."),clearInterval(statusInterval),setTimeout(connectWebSocket,2e3)},ws.onerror=e=>{console.error("❌ WebSocket error:",e),ws.close()}}connectWebSocket(),document.getElementById("sensor_1_state").addEventListener("change",e=>{let t=e.target.value;fetch("http://charger.local/config/update_state/1/"+t).then(()=>console.log("Sensor 1 atualizado:",t))}),document.getElementById("sensor_2_state").addEventListener("change",e=>{let t=e.target.value;fetch("http://charger.local/config/update_state/2/"+t).then(()=>console.log("Sensor 2 atualizado:",t))}),document.getElementById("displayBrightness").addEventListener("input",e=>{e=e.target.value;document.getElementById("brightnessValue").textContent=e}),document.getElementById("displayBrightness").addEventListener("change",e=>{let t=e.target.value;fetch("http://charger.local/config/display_brightness/"+t).then(()=>console.log("Brilho atualizado:",t))}),document.getElementById("restartBtn").addEventListener("click",function(){confirm("Are you sure you want to restart the system?")&&fetch("http://charger.local/boot",{method:"POST"}).then(e=>e.json()).then(e=>{alert("Restart command sent! System will reboot.")}).catch(e=>{alert("Failed to send restart command: "+e)})})</script></body></html>
)rawliteral";
