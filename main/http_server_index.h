#ifndef HTTP_SERVER_INDEX_H
#define HTTP_SERVER_INDEX_H

const char index_html[] PROGMEM = R"rawliteral(<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><title>Charger Display</title><script src="https://cdn.tailwindcss.com"></script><style>.log-info{color:green}.log-warning{color:orange}.log-error{color:red}.log-debug{color:gray}</style></head><body class="flex flex-col items-center justify-center min-h-screen bg-gray-100 space-y-6 p-4"><div class="flex space-x-6 bg-white p-4 rounded-lg shadow-md"><div><h2 class="text-lg font-semibold mb-2">Display</h2><div id="matrix" class="grid grid-cols-8 gap-1"></div></div><div class="space-y-2"><h2 class="text-lg font-semibold mb-2">Status</h2><div><strong>Uptime:</strong> <span id="uptime">-</span></div><div><strong>IP Address:</strong> <span id="ip_address">-</span></div><div><strong>WS Connected:</strong> <span id="ws_connected">-</span></div><div><strong>Free Heap:</strong> <span id="free_heap">-</span></div><div><label class="font-semibold">Sensor 1 State:</label><select id="sensor_1_state" class="border rounded p-1"><option value="unknown">unknown</option><option value="off">off</option><option value="disconnected">disconnected</option><option value="charging">charging</option></select></div><div><label class="font-semibold">Sensor 2 State:</label><select id="sensor_2_state" class="border rounded p-1"><option value="unknown">unknown</option><option value="off">off</option><option value="disconnected">disconnected</option><option value="charging">charging</option></select></div><div><label class="font-semibold">Display Brightness:</label><input id="displayBrightness" type="range" min="1" max="100" class="w-40" /><span id="brightnessValue">-</span></div></div></div><div class="bg-gray-50 p-2 rounded-lg shadow-md max-w-3xl w-full"><h2 class="text-sm font-semibold mb-1">Logs</h2><div id="logs" class="font-mono text-xs space-y-1 max-h-80 overflow-y-auto"></div></div><script>let ws,statusInterval,messagesThisSecond=0;function connectWebSocket(){ws=new WebSocket("ws://charger.home:81/");ws.onopen=()=>{console.log("✅ WebSocket connected");ws.send("status");statusInterval=setInterval(()=>{ws.readyState===WebSocket.OPEN&&ws.send("status")},1e3)};ws.onmessage=e=>{messagesThisSecond++;try{const d=JSON.parse(e.data);if(typeof d.uptime=="number"){let s=d.uptime,a=Math.floor(s/86400),h=Math.floor(s%86400/3600),m=Math.floor(s%3600/60),u="";a>0&&(u+=`${a}d `);(h>0||a>0)&&(u+=`${h}h `);u+=`${m}m`;document.getElementById("uptime").textContent=u}else document.getElementById("uptime").textContent="-";document.getElementById("ip_address").textContent=d.ip_address??"-";document.getElementById("ws_connected").textContent=d.ws_connected?"Yes":"No";document.getElementById("free_heap").textContent=typeof d.free_heap=="number"?`${(d.free_heap/1024).toFixed(1)} KB`:d.free_heap??"-";d.sensor_1_state&&(document.getElementById("sensor_1_state").value=d.sensor_1_state);d.sensor_2_state&&(document.getElementById("sensor_2_state").value=d.sensor_2_state);typeof d.displayBrightness!="undefined"&&(document.getElementById("displayBrightness").value=d.displayBrightness,document.getElementById("brightnessValue").textContent=d.displayBrightness);const mc=document.getElementById("matrix");mc.innerHTML="";d.displayArray.forEach(r=>{r.forEach(c=>{const R=(c>>16)&255,G=(c>>8)&255,B=c&255,x=document.createElement("div");x.style.backgroundColor=`rgb(${R}, ${G}, ${B})`;x.className="w-8 h-8 border border-gray-200";mc.appendChild(x)})});const lc=document.getElementById("logs");lc.innerHTML="";d.logBuffer&&d.logBuffer.slice().reverse().forEach(m=>{const l=document.createElement("div");m.startsWith("INFO:")?l.className="log-info":m.startsWith("WARNING:")?l.className="log-warning":m.startsWith("ERROR:")?l.className="log-error":m.startsWith("DEBUG:")&&(l.className="log-debug");l.textContent=m;lc.appendChild(l)})}catch(r){console.error("JSON parse error:",r,e.data)}};ws.onclose=()=>{console.log("⚠️ WebSocket disconnected, retrying in 2s...");clearInterval(statusInterval);setTimeout(connectWebSocket,2e3)};ws.onerror=r=>{console.error("❌ WebSocket error:",r);ws.close()}}connectWebSocket();document.getElementById("sensor_1_state").addEventListener("change",e=>{const v=e.target.value;fetch(`http://charger.local/config/update_state/1/${v}`).then(()=>console.log("Sensor 1 atualizado:",v))});document.getElementById("sensor_2_state").addEventListener("change",e=>{const v=e.target.value;fetch(`http://charger.local/config/update_state/2/${v}`).then(()=>console.log("Sensor 2 atualizado:",v))});document.getElementById("displayBrightness").addEventListener("input",e=>{const v=e.target.value;document.getElementById("brightnessValue").textContent=v});document.getElementById("displayBrightness").addEventListener("change",e=>{const v=e.target.value;fetch(`http://charger.local/config/display_brightness/${v}`).then(()=>console.log("Brilho atualizado:",v))});</script></body></html>)rawliteral";

#endif // HTTP_SERVER_INDEX_H
